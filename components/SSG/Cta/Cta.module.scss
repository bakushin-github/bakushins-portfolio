@use "../../../app/styles/variables.module" as *;

.cta {
  position: relative; // Imageのラッパーが absolute 配置されるため必須
  background-image: url(../../../public/Cta/PC/cta_background.webp);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  width: 100%;
  height: 230px; // 高さを固定 (または min-height や aspect-ratio で制御)
  padding-top: 80px;
  padding-bottom: 77px;
  overflow: hidden;
  box-sizing: border-box;
  @media (width:768px) {
    padding-top: 60px;
    padding-bottom: 60px;
    height: auto;
  }
  @media (width:767px) {
    padding-top: 60px;
    padding-bottom: 60px;
    height: auto;
  }
  @media (width:375px) {
    padding-top: 60px;
    padding-bottom: 60px;
    height: auto;
  }
}

// --- 画像ラッパーのスタイル ---
// 元の .cta__image_left, .cta__image_center, .cta__image_right のスタイルを
// ラッパーdivのクラス (例: .cta__image_left_wrapper) に移します。

.cta__image_left_wrapper {
  position: absolute;
  top: 67px;
  left: calc(1440px - 1406.2px); // この計算が意図通りか確認
  width: 206px;  // max-width ではなく固定 width (または %指定)
  height: 206px; // max-height ではなく固定 height (または %指定、または aspect-ratio)
  // Image に fill を使うので、ラッパーで明確なサイズを指定
  animation-name: y-loop;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  z-index: 1; // 必要に応じて
  @media (width:768px) {
    width: 110px;
    height: 110px;
    top: 120px;
    left: 60px;
  }
  @media (max-width:767px) {
    display: none;
  }
}

.cta__image_left_wrapperSp {
  position: absolute;
  top: 67px;
  left: calc(1440px - 1406.2px); // この計算が意図通りか確認
  width: 206px;  // max-width ではなく固定 width (または %指定)
  height: 206px; // max-height ではなく固定 height (または %指定、または aspect-ratio)
  // Image に fill を使うので、ラッパーで明確なサイズを指定
  animation-name: y-loop;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  z-index: 1; // 必要に応じて
    @media (width:767px) {
       width: 220.90px;
       top: -20px;
       left: 0;
  }
    @media (width:375px) {
       width: 108px;
       top: -20px;
       left: 0;
  }
  @media (min-width:768px) {
    display: none;
  }
}

.cta__image_center_wrapper {
  position: absolute;
  top: -25px;
  left: calc(1440px - (1440px - 569.58px)); // この計算が意図通りか確認
  width: 155px;
  height: 155px;
  animation-name: y--loop;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  z-index: 1; // 必要に応じて
    @media (width:768px) {
      width: 83px;
      height: 83px;
    top: -12px;
    left: 350px;
  }
    @media (max-width:767px) {
    display: none;
   }
}
.cta__image_center_wrapperSp {
  position: absolute;
  top: 0px;
  left: 0;
  width: 155px;
  height: 155px;
  animation-name: y--loop;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  z-index: 1; // 必要に応じて
   @media (width:767px) {
       width: 151.35px;
       right: 0;
       left: initial;
       top: -40px;
  }
   @media (width:375px) {
       width: 74px;
       right: 0;
       left: initial;
       top: -40px;
  }
    @media (min-width:768px) {
    display: none;
  }
}

.cta__image_right_wrapper {
  position: absolute;
  top: 18px;
  right: -16px;
  width: 248px; // 元のSCSSのmax-widthを採用
  height: 217px; // 元のSCSSのmax-heightを採用
  // またはアスペクト比を維持するなら片方を auto にしてもう片方を指定
  animation-name: y-loop;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  z-index: 1; // 必要に応じて
      @media (width:768px) {
      width: 132px;
      height: 116px;
      top: inherit;
    bottom: 0px;
right: 0;  }

      @media (max-width:767px) {
    display: none;
   }
}
.cta__image_right_wrapperSp {
  position: absolute;
  top: 18px;
  right: -16px;
  width: 248px; // 元のSCSSのmax-widthを採用
  height: 217px; // 元のSCSSのmax-heightを採用
  // またはアスペクト比を維持するなら片方を auto にしてもう片方を指定
  animation-name: y-loop;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  z-index: 1; // 必要に応じて
     @media (width:767px) {
       width: 370.21px;
       top: initial;
       bottom: -90px;
       right: -20px;
  }
     @media (width:375px) {
       width: 181px;
       top: initial;
       bottom: -90px;
       right: -20px;
  }
    @media (min-width:768px) {
    display: none;
  }
}

// Imageコンポーネント自体に適用するクラスは不要になるか、
// object-fit以外の微調整に使う程度になります。
// .thumbnailImage のような共通クラスは不要になる可能性が高いです。

/* 元のキーフレームアニメーションは変更なし */
@keyframes y-loop {
  0% { transform: translateY(0); }
  50% { transform: translateY(20px); }
  100% { transform: translateY(0); }
}
@keyframes y--loop {
  0% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
  100% { transform: translateY(0); }
}


.cta__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 1090px; // 例: (1440 - 167*2 - ボタン等の幅) に基づくような値
  margin-inline: auto;
  padding-inline: 20px; // コンテナ左右の余白 (任意)
  position: relative;
  z-index: 2; // 背景画像より手前
  height: 100%; // .cta の padding を考慮した上で中央配置のため (必要なら)
  @media (width:767px) {
    display: block;
    padding-inline: 200px;
  }
  @media (width:375px) {
    display: block;
    padding-inline: 20px;
  }
}

.cta_text {
  font-family: "Noto Sans JP";
  font-weight: 700;
  font-size: 30px;
  line-height: 170%;
  color: $base-color-white;
  // max-width: 440px; // 必要に応じて
  @media (width:768px) {
font-size: 25px;
  }
  @media (width:767px) {
font-size: 20px;
margin-bottom: 40px;
  }
  @media (width:375px) {
font-size: 20px;
margin-bottom: 40px;
  }
}

.cta__buttons {
  display: flex;
  align-items: center;
  gap: 16px;
}

.cta_contact {
  // スタイル指定があれば
}